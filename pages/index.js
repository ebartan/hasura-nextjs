import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { SiHasura, SiNextdotjs, SiGraphql, SiPostgresql } from 'react-icons/si';
export default function Home(works) {

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className=' flex flex-wrap items-center justify-center'>
          <SiHasura size="2em" color="#8C7A64" className="mt-2 mr-2" />
          <SiNextdotjs size="2em" color="#8C7A64" className="mt-2 mr-2" />
          <SiGraphql size="2em" color="#8C7A64" className="mt-2 mr-2" />
          <SiPostgresql size="2em" color="#8C7A64" className="mt-2 mr-2" />
        </div>

        <h1>
          Hasura with Nextjs
        </h1>
        <div>
          {console.log(works)}
          {works.works.map((work) => (
            <div key={work.id}>{work.name}</div>
          ))}

        </div>


      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export async function getStaticProps(context) {
  const options = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'x-hasura-admin-secret': process.env.HASURA_ADMIN_SECRET,
      // Authorization: `Bearer ${process.env.GITHUB_TOKEN}`,
    },
    body: JSON.stringify({
      query: `query fetchWorks {
        works {
          id
          name
          description
          created_at
          updated_at
        }
      }
      
      `,
      variables: {},
      operationName: "fetchWorks",

    })
  }
  const fetchResponse = await fetch('https://ebartanhasuranextjs.hasura.app/v1/graphql', options)
  const fetchJson = await fetchResponse.json()
  console.log(fetchJson.data.works)
  const works = fetchJson.data.works
  return {

    props: { works: works }
  }
}